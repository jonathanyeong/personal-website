<script>
  const formElement = document.getElementById('newsletterForm') as HTMLFormElement;
  const successMessage = document.getElementById('successMessage');

  formElement.onsubmit = async (e) => {
    e.preventDefault();

    try {
      const formData = new FormData(formElement);
      const email = formData.get("email")
      if (!email) {
        console.log("No email was entered")
        return;
      }

      const response = await fetch("/api/subscribe", {
        method: "POST",
        body: formData,
      });

      const result = await response.json();
      if (result.message) {
        successMessage && successMessage.classList.remove('hidden');
        const messageText = document.getElementById('messageText');
        if (messageText) {
          messageText.textContent = result.message || "Success! Check your email to confirm!";
        }

        formElement.reset();

        setTimeout(() => {
          successMessage && successMessage.classList.add('hidden');
        }, 3000);
      }
    } catch (error) {
      console.error('Error:', error);
    }
  };
</script>


<div class="newsletter__container wrapper">
  <p class="newsletter__subtitle">Want to stay connected?</p>
  <h1>Subscribe to my newsletter</h1>
  <p>Weekly, bite-sized,  practical tips and insights that have meaningfully improved how I code, design, and write.</p>
  <div id="successMessage" class="newsletter__success hidden">
    <p id="messageText">Success! Check your email to confirm!</p>
  </div>
  <form id="newsletterForm" class="newsletter__form">
    <label for="email" class="screen-reader">Email address</label>
    <input
          type="email"
          id="email"
          placeholder="Enter your email"
          class="newsletter__form-input"
          name="email"
          required
          aria-required="true"
          autocomplete="off"
        >
    <button type="submit" class="newsletter__form-submit">Subscribe</button>
  </form>
  <p class="newsletter__guarantee">No spam. Unsubscribe anytime.</p>
</div>

<style>
  .newsletter__container {
    --gutter: var(--space-m);
    --wrapper-max-width: 800px;

    text-align: center;
  }

  .newsletter__container > * {
    /* Reset margin of elements */
    margin-top: 0;
  }

  p, h1, form {
    margin-bottom: var(--space-s);
  }

  .newsletter__subtitle,
  .newsletter__guarantee {
    font-size: var(--font-step--1);
    text-transform: uppercase;
    font-weight: 900;
    color: var(--color-hero-text);
  }

  .newsletter__subtitle::before,
  .newsletter__subtitle::after {
    width: 1.5rem;
    height: 2px;
    background-color: var(--color-hero-text);
    content: "";
    display: inline-block;
    vertical-align: middle;
    transform: translateY(-0.1cap);
    margin: 0 var(--space-2xs);
  }

  .newsletter__form {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-3xs);
  }

  .newsletter__form-input {
    flex-basis: 0;
    flex-grow: 999;
    min-width: 50%;
    padding-left: var(--space-2xs);
    border-radius: var(--space-3xs);
    border: 2px solid var(--color-gray-0);
    background-color: var(--color-light-text);
    color: var(--color-dark-text);
    font-size: var(--font-step-0);
  }

  .newsletter__form-input::placeholder {
    opacity: 0.3;
    color: var(--color-dark-text);
    font-size: var(--font-step-0);
  }

  .newsletter__form-submit {
    flex-grow: 1;
    padding: var(--space-2xs) var(--space-xs);
    font-size: var(--font-step-0);
    background-color: var(--color-green-2);
    color: var(--color-light-text);
    border: 0;
    border-radius: var(--space-3xs);
    cursor: pointer;
    transition: filter var(--transition-bounce);
    filter: brightness(100%);
  }

  .newsletter__form-submit:hover {
    filter: brightness(110%);
  }

  .newsletter__success {
    background-color: #d4edda;
    color: #155724;
    padding: var(--space-xs);
    border-radius: var(--space-3xs);
    margin-bottom: var(--space-s);
  }

  .hidden {
    display: none;
  }
</style>