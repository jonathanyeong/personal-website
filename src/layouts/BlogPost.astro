---
import type { CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import TopicList from '../components/TopicList.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage, topics } = Astro.props;
---

<BaseLayout title={title} description={description} pubDate={pubDate.toISOString()}>
    <article class="prose prose-slate prose-lg dark:prose-invert prose-img:rounded-md mb-8 prose-text-link">
            <div class="text-base text-slate-500 dark:text-slate-300 mb-1">
                Published <FormattedDate date={pubDate} />
                {
                    updatedDate && (
                        <span>
                            | Updated <FormattedDate date={updatedDate} />
                        </span>
                    )
                }
            </div>
            <h1 class="mb-2 font-black">{title}</h1>
            {topics && topics.length > 0 && <TopicList topics={topics} />}
            <hr class="mt-2" />
            <slot />
            <hr />
    </article>
    <script src="https://giscus.app/client.js"
            data-repo="jonathanyeong/personal-website"
            data-repo-id="R_kgDOI3Bd_Q"
            data-category="Announcements"
            data-category-id="DIC_kwDOI3Bd_c4CXaBQ"
            data-mapping="title"
            data-strict="1"
            data-reactions-enabled="1"
            data-emit-metadata="0"
            data-input-position="top"
            data-theme="light"
            data-lang="en"
            data-loading="lazy"
            crossorigin="anonymous"
            async>
    </script>
</BaseLayout>
